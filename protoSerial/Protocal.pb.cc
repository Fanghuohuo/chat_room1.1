// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protocal.proto

#include "Protocal.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace chat {
namespace information {
class PBindNameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBindName>
      _instance;
} _PBindName_default_instance_;
class PChatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PChat>
      _instance;
} _PChat_default_instance_;
class PRoomInformationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PRoomInformation>
      _instance;
} _PRoomInformation_default_instance_;
class PServerErrorMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PServerErrorMessage>
      _instance;
} _PServerErrorMessage_default_instance_;
}  // namespace information
}  // namespace chat
namespace protobuf_Protocal_2eproto {
static void InitDefaultsPBindName() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chat::information::_PBindName_default_instance_;
    new (ptr) ::chat::information::PBindName();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chat::information::PBindName::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PBindName =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBindName}, {}};

static void InitDefaultsPChat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chat::information::_PChat_default_instance_;
    new (ptr) ::chat::information::PChat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chat::information::PChat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PChat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPChat}, {}};

static void InitDefaultsPRoomInformation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chat::information::_PRoomInformation_default_instance_;
    new (ptr) ::chat::information::PRoomInformation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chat::information::PRoomInformation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PRoomInformation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPRoomInformation}, {}};

static void InitDefaultsPServerErrorMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::chat::information::_PServerErrorMessage_default_instance_;
    new (ptr) ::chat::information::PServerErrorMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::chat::information::PServerErrorMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PServerErrorMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPServerErrorMessage}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PBindName.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PChat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PRoomInformation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PServerErrorMessage.base);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::information::PBindName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::information::PBindName, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::information::PChat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::information::PChat, information_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::information::PRoomInformation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::information::PRoomInformation, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::information::PRoomInformation, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::information::PRoomInformation, information_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::information::PServerErrorMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::chat::information::PServerErrorMessage, mes_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::chat::information::PBindName)},
  { 6, -1, sizeof(::chat::information::PChat)},
  { 12, -1, sizeof(::chat::information::PRoomInformation)},
  { 20, -1, sizeof(::chat::information::PServerErrorMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::chat::information::_PBindName_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chat::information::_PChat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chat::information::_PRoomInformation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::chat::information::_PServerErrorMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Protocal.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016Protocal.proto\022\020chat.information\"\031\n\tPB"
      "indName\022\014\n\004name\030\001 \001(\014\"\034\n\005PChat\022\023\n\013inform"
      "ation\030\001 \001(\014\"C\n\020PRoomInformation\022\014\n\004time\030"
      "\001 \001(\003\022\014\n\004name\030\002 \001(\014\022\023\n\013information\030\003 \001(\014"
      "\"w\n\023PServerErrorMessage\022\?\n\003mes\030\001 \001(\01622.c"
      "hat.information.PServerErrorMessage.Erro"
      "rMessage\"\037\n\014ErrorMessage\022\017\n\013BodyTooLong\020"
      "\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 289);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Protocal.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Protocal_2eproto
namespace chat {
namespace information {
const ::google::protobuf::EnumDescriptor* PServerErrorMessage_ErrorMessage_descriptor() {
  protobuf_Protocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Protocal_2eproto::file_level_enum_descriptors[0];
}
bool PServerErrorMessage_ErrorMessage_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PServerErrorMessage_ErrorMessage PServerErrorMessage::BodyTooLong;
const PServerErrorMessage_ErrorMessage PServerErrorMessage::ErrorMessage_MIN;
const PServerErrorMessage_ErrorMessage PServerErrorMessage::ErrorMessage_MAX;
const int PServerErrorMessage::ErrorMessage_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void PBindName::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBindName::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBindName::PBindName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Protocal_2eproto::scc_info_PBindName.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chat.information.PBindName)
}
PBindName::PBindName(const PBindName& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:chat.information.PBindName)
}

void PBindName::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PBindName::~PBindName() {
  // @@protoc_insertion_point(destructor:chat.information.PBindName)
  SharedDtor();
}

void PBindName::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PBindName::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBindName::descriptor() {
  ::protobuf_Protocal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBindName& PBindName::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Protocal_2eproto::scc_info_PBindName.base);
  return *internal_default_instance();
}


void PBindName::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.information.PBindName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PBindName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chat.information.PBindName)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chat.information.PBindName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chat.information.PBindName)
  return false;
#undef DO_
}

void PBindName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chat.information.PBindName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:chat.information.PBindName)
}

::google::protobuf::uint8* PBindName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chat.information.PBindName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.information.PBindName)
  return target;
}

size_t PBindName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.information.PBindName)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBindName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chat.information.PBindName)
  GOOGLE_DCHECK_NE(&from, this);
  const PBindName* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBindName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chat.information.PBindName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chat.information.PBindName)
    MergeFrom(*source);
  }
}

void PBindName::MergeFrom(const PBindName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chat.information.PBindName)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void PBindName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chat.information.PBindName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBindName::CopyFrom(const PBindName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.information.PBindName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBindName::IsInitialized() const {
  return true;
}

void PBindName::Swap(PBindName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBindName::InternalSwap(PBindName* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBindName::GetMetadata() const {
  protobuf_Protocal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PChat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PChat::kInformationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PChat::PChat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Protocal_2eproto::scc_info_PChat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chat.information.PChat)
}
PChat::PChat(const PChat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  information_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.information().size() > 0) {
    information_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.information_);
  }
  // @@protoc_insertion_point(copy_constructor:chat.information.PChat)
}

void PChat::SharedCtor() {
  information_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PChat::~PChat() {
  // @@protoc_insertion_point(destructor:chat.information.PChat)
  SharedDtor();
}

void PChat::SharedDtor() {
  information_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PChat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PChat::descriptor() {
  ::protobuf_Protocal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PChat& PChat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Protocal_2eproto::scc_info_PChat.base);
  return *internal_default_instance();
}


void PChat::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.information.PChat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  information_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PChat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chat.information.PChat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes information = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_information()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chat.information.PChat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chat.information.PChat)
  return false;
#undef DO_
}

void PChat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chat.information.PChat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes information = 1;
  if (this->information().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->information(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:chat.information.PChat)
}

::google::protobuf::uint8* PChat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chat.information.PChat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes information = 1;
  if (this->information().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->information(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.information.PChat)
  return target;
}

size_t PChat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.information.PChat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes information = 1;
  if (this->information().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->information());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PChat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chat.information.PChat)
  GOOGLE_DCHECK_NE(&from, this);
  const PChat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PChat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chat.information.PChat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chat.information.PChat)
    MergeFrom(*source);
  }
}

void PChat::MergeFrom(const PChat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chat.information.PChat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.information().size() > 0) {

    information_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.information_);
  }
}

void PChat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chat.information.PChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PChat::CopyFrom(const PChat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.information.PChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PChat::IsInitialized() const {
  return true;
}

void PChat::Swap(PChat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PChat::InternalSwap(PChat* other) {
  using std::swap;
  information_.Swap(&other->information_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PChat::GetMetadata() const {
  protobuf_Protocal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PRoomInformation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PRoomInformation::kTimeFieldNumber;
const int PRoomInformation::kNameFieldNumber;
const int PRoomInformation::kInformationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PRoomInformation::PRoomInformation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Protocal_2eproto::scc_info_PRoomInformation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chat.information.PRoomInformation)
}
PRoomInformation::PRoomInformation(const PRoomInformation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  information_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.information().size() > 0) {
    information_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.information_);
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:chat.information.PRoomInformation)
}

void PRoomInformation::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  information_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = GOOGLE_LONGLONG(0);
}

PRoomInformation::~PRoomInformation() {
  // @@protoc_insertion_point(destructor:chat.information.PRoomInformation)
  SharedDtor();
}

void PRoomInformation::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  information_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PRoomInformation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PRoomInformation::descriptor() {
  ::protobuf_Protocal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PRoomInformation& PRoomInformation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Protocal_2eproto::scc_info_PRoomInformation.base);
  return *internal_default_instance();
}


void PRoomInformation::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.information.PRoomInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  information_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool PRoomInformation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chat.information.PRoomInformation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes information = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_information()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chat.information.PRoomInformation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chat.information.PRoomInformation)
  return false;
#undef DO_
}

void PRoomInformation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chat.information.PRoomInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->time(), output);
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->name(), output);
  }

  // bytes information = 3;
  if (this->information().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->information(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:chat.information.PRoomInformation)
}

::google::protobuf::uint8* PRoomInformation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chat.information.PRoomInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->time(), target);
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->name(), target);
  }

  // bytes information = 3;
  if (this->information().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->information(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.information.PRoomInformation)
  return target;
}

size_t PRoomInformation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.information.PRoomInformation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // bytes information = 3;
  if (this->information().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->information());
  }

  // int64 time = 1;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PRoomInformation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chat.information.PRoomInformation)
  GOOGLE_DCHECK_NE(&from, this);
  const PRoomInformation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PRoomInformation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chat.information.PRoomInformation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chat.information.PRoomInformation)
    MergeFrom(*source);
  }
}

void PRoomInformation::MergeFrom(const PRoomInformation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chat.information.PRoomInformation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.information().size() > 0) {

    information_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.information_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void PRoomInformation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chat.information.PRoomInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PRoomInformation::CopyFrom(const PRoomInformation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.information.PRoomInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PRoomInformation::IsInitialized() const {
  return true;
}

void PRoomInformation::Swap(PRoomInformation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PRoomInformation::InternalSwap(PRoomInformation* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  information_.Swap(&other->information_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(time_, other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PRoomInformation::GetMetadata() const {
  protobuf_Protocal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PServerErrorMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PServerErrorMessage::kMesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PServerErrorMessage::PServerErrorMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Protocal_2eproto::scc_info_PServerErrorMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:chat.information.PServerErrorMessage)
}
PServerErrorMessage::PServerErrorMessage(const PServerErrorMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mes_ = from.mes_;
  // @@protoc_insertion_point(copy_constructor:chat.information.PServerErrorMessage)
}

void PServerErrorMessage::SharedCtor() {
  mes_ = 0;
}

PServerErrorMessage::~PServerErrorMessage() {
  // @@protoc_insertion_point(destructor:chat.information.PServerErrorMessage)
  SharedDtor();
}

void PServerErrorMessage::SharedDtor() {
}

void PServerErrorMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PServerErrorMessage::descriptor() {
  ::protobuf_Protocal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PServerErrorMessage& PServerErrorMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Protocal_2eproto::scc_info_PServerErrorMessage.base);
  return *internal_default_instance();
}


void PServerErrorMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:chat.information.PServerErrorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mes_ = 0;
  _internal_metadata_.Clear();
}

bool PServerErrorMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:chat.information.PServerErrorMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .chat.information.PServerErrorMessage.ErrorMessage mes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mes(static_cast< ::chat::information::PServerErrorMessage_ErrorMessage >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:chat.information.PServerErrorMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:chat.information.PServerErrorMessage)
  return false;
#undef DO_
}

void PServerErrorMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:chat.information.PServerErrorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .chat.information.PServerErrorMessage.ErrorMessage mes = 1;
  if (this->mes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->mes(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:chat.information.PServerErrorMessage)
}

::google::protobuf::uint8* PServerErrorMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:chat.information.PServerErrorMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .chat.information.PServerErrorMessage.ErrorMessage mes = 1;
  if (this->mes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->mes(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chat.information.PServerErrorMessage)
  return target;
}

size_t PServerErrorMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chat.information.PServerErrorMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .chat.information.PServerErrorMessage.ErrorMessage mes = 1;
  if (this->mes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mes());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PServerErrorMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:chat.information.PServerErrorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const PServerErrorMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PServerErrorMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:chat.information.PServerErrorMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:chat.information.PServerErrorMessage)
    MergeFrom(*source);
  }
}

void PServerErrorMessage::MergeFrom(const PServerErrorMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:chat.information.PServerErrorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mes() != 0) {
    set_mes(from.mes());
  }
}

void PServerErrorMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:chat.information.PServerErrorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PServerErrorMessage::CopyFrom(const PServerErrorMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chat.information.PServerErrorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PServerErrorMessage::IsInitialized() const {
  return true;
}

void PServerErrorMessage::Swap(PServerErrorMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PServerErrorMessage::InternalSwap(PServerErrorMessage* other) {
  using std::swap;
  swap(mes_, other->mes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PServerErrorMessage::GetMetadata() const {
  protobuf_Protocal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protocal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace information
}  // namespace chat
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chat::information::PBindName* Arena::CreateMaybeMessage< ::chat::information::PBindName >(Arena* arena) {
  return Arena::CreateInternal< ::chat::information::PBindName >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chat::information::PChat* Arena::CreateMaybeMessage< ::chat::information::PChat >(Arena* arena) {
  return Arena::CreateInternal< ::chat::information::PChat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chat::information::PRoomInformation* Arena::CreateMaybeMessage< ::chat::information::PRoomInformation >(Arena* arena) {
  return Arena::CreateInternal< ::chat::information::PRoomInformation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::chat::information::PServerErrorMessage* Arena::CreateMaybeMessage< ::chat::information::PServerErrorMessage >(Arena* arena) {
  return Arena::CreateInternal< ::chat::information::PServerErrorMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
